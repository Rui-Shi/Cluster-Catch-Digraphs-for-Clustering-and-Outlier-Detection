py_run_string()
py_run_string()
library(reticulate)
py_run_string("import os")
py_run_string("os.chdir('D:/code_working_folder/KS-MCGs/simulations/Uniform_MeanSlippage/SVDD-Python-master')")
py_run_string("import sys")
py_run_string("import numpy as np")
py_run_string("from src.BaseSVDD import BaseSVDD")
py_run_string("svdd = BaseSVDD(C=0.05, kernel='poly',degree=1, display='on')")
library(parallel)
library(plotrix)
library(dplyr)
library(MASS)
library(doParallel)
set.seed(1)
len = 1000
n = 50
d = 2
cont = 0.05 #contaminate levels
i = 1
range = NULL
set.seed(2)
len = 100
n1 = round(n*(1-cont))
n0 = n-n1
sft = c(2,3,4)
data.list = NULL
for(i in 1:len){
normal = apply(range,1,function(t){
return(runif(n1,t[1],t[2]))
})
range.outlier = range
range.outlier[1,] = range.outlier[1,] + sft[1]
outlier = apply(range.outlier,1,function(t){
return(runif(n0,t[1],t[2]))   # mean shift by 2
})
data.otl = rbind(normal,outlier)
colnames(data.otl) = c(1:d)
#plot(data.otl)
data.list = c(data.list,list(data.otl))
}
while(i <= d){
range.temp = c(min=0,max=1)
range = rbind(range,range.temp)
i = i + 1
}
rownames(range) = c(1:d)
#####
##shift by 2
set.seed(2)
len = 100
n1 = round(n*(1-cont))
n0 = n-n1
sft = c(2,3,4)
data.list = NULL
for(i in 1:len){
normal = apply(range,1,function(t){
return(runif(n1,t[1],t[2]))
})
range.outlier = range
range.outlier[1,] = range.outlier[1,] + sft[1]
outlier = apply(range.outlier,1,function(t){
return(runif(n0,t[1],t[2]))   # mean shift by 2
})
data.otl = rbind(normal,outlier)
colnames(data.otl) = c(1:d)
#plot(data.otl)
data.list = c(data.list,list(data.otl))
}
data = data.list[[1]]
data
py$data = data
py$data
py_run_string("svdd = BaseSVDD(C=0.05, kernel='poly',degree=1, display='on')")
py$data = data
py_run_string("svdd.fit(data)")
py$svdd.radius
py$svdd
py_run_string("radius = svdd.radius")
py_run_string("center = svdd.center")
py$radius
py$center
py_run_string("svdd = BaseSVDD(C=0.05, kernel='poly',degree=1, display='off')")
py$data = data
py_run_string("svdd.fit(data)")
py_run_string("radius = svdd.radius")
py_run_string("center = svdd.center")
py$radius
py$center
library(reticulate)
py_run_string("import os")
py_run_string("os.chdir('D:/code_working_folder/KS-MCGs/simulations/Uniform_MeanSlippage/SVDD-Python-master')")
py_run_string("import sys")
py_run_string("import numpy as np")
py_run_string("from src.BaseSVDD import BaseSVDD")
# svdd object using polynomial kernel with degree 1, which has rigorous sphere boundary
py_run_string("svdd = BaseSVDD(C=0.05, kernel='poly',degree=1, display='off')")
py$data = data
py_run_string("svdd.fit(data)")
library(reticulate)
py_run_string("import os")
py_run_string("os.chdir('D:/code_working_folder/KS-MCGs/simulations/Uniform_MeanSlippage/SVDD-Python-master')")
py_run_string("import sys")
py_run_string("import numpy as np")
py_run_string("from src.BaseSVDD import BaseSVDD")
# svdd object using polynomial kernel with degree 1, which has rigorous sphere boundary
py_run_string("svdd = BaseSVDD(C=0.05, kernel='poly',degree=1, display='on')")
py$data = data
py_run_string("svdd.fit(data)")
data = data.list[[1]]
set.seed(1)
len = 1000
n = 50
d = 2
cont = 0.05 #contaminate levels
i = 1
range = NULL
while(i <= d){
range.temp = c(min=0,max=1)
range = rbind(range,range.temp)
i = i + 1
}
rownames(range) = c(1:d)
data.list = NULL
for(i in 1:len){
data = apply(range,1,function(t){
return(runif(n,t[1],t[2]))
})
colnames(data) = c(1:d)
data.list = c(data.list,list(data))
}
#####
##shift by 2
set.seed(2)
len = 100
n1 = round(n*(1-cont))
n0 = n-n1
sft = c(2,3,4)
data.list = NULL
for(i in 1:len){
normal = apply(range,1,function(t){
return(runif(n1,t[1],t[2]))
})
range.outlier = range
range.outlier[1,] = range.outlier[1,] + sft[1]
outlier = apply(range.outlier,1,function(t){
return(runif(n0,t[1],t[2]))   # mean shift by 2
})
data.otl = rbind(normal,outlier)
colnames(data.otl) = c(1:d)
#plot(data.otl)
data.list = c(data.list,list(data.otl))
}
data = data.list[[1]]
library(reticulate)
py_run_string("import os")
py_run_string("os.chdir('D:/code_working_folder/KS-MCGs/simulations/Uniform_MeanSlippage/SVDD-Python-master')")
py_run_string("import sys")
py_run_string("import numpy as np")
py_run_string("from src.BaseSVDD import BaseSVDD")
# svdd object using polynomial kernel with degree 1, which has rigorous sphere boundary
py_run_string("svdd = BaseSVDD(C=0.05, kernel='poly',degree=1, display='off')")
py$data = data
py_run_string("svdd.fit(data)")
py_run_string("radius = svdd.radius")
py_run_string("center = svdd.center")
py$radius
py$center
data = data.list[[1]]
library(reticulate)
py_run_string("import os")
py_run_string("os.chdir('D:/code_working_folder/KS-MCGs/simulations/Uniform_MeanSlippage/SVDD-Python-master')")
py_run_string("import sys")
py_run_string("import numpy as np")
py_run_string("from src.BaseSVDD import BaseSVDD")
# svdd object using polynomial kernel with degree 1, which has rigorous sphere boundary
py_run_string("svdd = BaseSVDD(C=0.1, kernel='poly',degree=1, display='off')")
py$data = data
py_run_string("svdd.fit(data)")
py_run_string("radius = svdd.radius")
py_run_string("center = svdd.center")
py$radius
py$center
data = data.list[[1]]
library(reticulate)
py_run_string("import os")
py_run_string("os.chdir('D:/code_working_folder/KS-MCGs/simulations/Uniform_MeanSlippage/SVDD-Python-master')")
py_run_string("import sys")
py_run_string("import numpy as np")
py_run_string("from src.BaseSVDD import BaseSVDD")
# svdd object using polynomial kernel with degree 1, which has rigorous sphere boundary
py_run_string("svdd = BaseSVDD(C=0.1, kernel='poly',degree=1, display='off')")
py$data = data
py_run_string("svdd.fit(data)")
py_run_string("radius = svdd.radius")
py_run_string("center = svdd.center")
py$radius
py$center
svdd_sphere = function(x){
library(reticulate)
py_run_string("import os")
py_run_string("os.chdir('D:/code_working_folder/KS-MCGs/simulations/Uniform_MeanSlippage/SVDD-Python-master')")
py_run_string("import sys")
py_run_string("import numpy as np")
py_run_string("from src.BaseSVDD import BaseSVDD")
# svdd object using polynomial kernel with degree 1, which has rigorous sphere boundary
py_run_string("svdd = BaseSVDD(C=0.1, kernel='poly',degree=1, display='off')")
py$data = x
py_run_string("svdd.fit(data)")
py_run_string("radius = svdd.radius")
py_run_string("center = svdd.center")
return(list(center = py$center, radius = py$radius))
}
# x is the data set feeded
# C is a penalty parameter controls the value of the radius
svdd_sphere = function(x,C=0.05){
library(reticulate)
py_run_string("import os")
py_run_string("os.chdir('D:/code_working_folder/KS-MCGs/simulations/Uniform_MeanSlippage/SVDD-Python-master')")
py_run_string("import sys")
py_run_string("import numpy as np")
py_run_string("from src.BaseSVDD import BaseSVDD")
# svdd object using polynomial kernel with degree 1, which has rigorous sphere boundary
py$P=C
py_run_string("svdd = BaseSVDD(C=P, kernel='poly',degree=1, display='off')")
py$data = x
py_run_string("svdd.fit(data)")
py_run_string("radius = svdd.radius")
py_run_string("center = svdd.center")
return(list(center = py$center, radius = py$radius))
}
svdd_sphere(data.list[[1]], C=0.05)
svdd_sphere(data.list[[1]], C=0.1)
svdd_sphere(data.list[[1]], C=1)
